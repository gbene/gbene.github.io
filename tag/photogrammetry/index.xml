<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Photogrammetry | Gabriele Benedetti</title>
    <link>https://gabri.xyz/tag/photogrammetry/</link>
      <atom:link href="https://gabri.xyz/tag/photogrammetry/index.xml" rel="self" type="application/rss+xml" />
    <description>Photogrammetry</description>
    <generator>Wowchemy (https://wowchemy.com)</generator><language>en-us</language><copyright>Â© 2021 Gabriele Benedetti</copyright><lastBuildDate>Wed, 25 Nov 2020 00:00:00 +0000</lastBuildDate>
    <image>
      <url>https://gabri.xyz/media/sharing.png</url>
      <title>Photogrammetry</title>
      <link>https://gabri.xyz/tag/photogrammetry/</link>
    </image>
    
    <item>
      <title>Automatic processing for referenced slopes</title>
      <link>https://gabri.xyz/projects/auto-slope/</link>
      <pubDate>Wed, 25 Nov 2020 00:00:00 +0000</pubDate>
      <guid>https://gabri.xyz/projects/auto-slope/</guid>
      <description>&lt;h1 id=&#34;the-premise&#34;&gt;The premise&lt;/h1&gt;
&lt;p&gt;This project was a request aimed to find a way to prepare different 3D models, in particular artificial slopes, and calculate the difference between two reconstructions after a given event directly in metashape &lt;strong&gt;without&lt;/strong&gt; using external programs.&lt;/p&gt;
&lt;p&gt;In particular the set of scripts needed to achive the following tasks:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Apply different masks for different sets of photos.&lt;/li&gt;
&lt;li&gt;Count the total number of markers detected in all of the uploaded photos. The number of markers needed to be in total always 135.&lt;/li&gt;
&lt;li&gt;Cut the resulting point clouds with constant dimensions and automatically apply a rotatation to make the plane horizontal.&lt;/li&gt;
&lt;li&gt;Calculate the difference between two meshes. To make sure that the difference operation was applied properly the two chunks need to be aligned and the models need to be rotated flat and cropped.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;













&lt;figure  id=&#34;figure-input-image-example&#34;&gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img src=&#34;https://gabri.xyz/media/auto_slope_img/og_img.png&#34; alt=&#34;Input image example&#34; loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;figcaption data-pre=&#34;Figure&amp;nbsp;&#34; data-post=&#34;:&amp;nbsp;&#34; class=&#34;numbered&#34;&gt;
      Input image example
    &lt;/figcaption&gt;&lt;/figure&gt;














&lt;figure  &gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img src=&#34;https://gabri.xyz/media/auto_slope_img/slope_a2.png&#34; alt=&#34;&#34; loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;/figure&gt;














&lt;figure  id=&#34;figure-reconstructed-slope-before-and-after-the-event&#34;&gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img src=&#34;https://gabri.xyz/media/auto_slope_img/slope_b2.png&#34; alt=&#34;Reconstructed slope before and after the event&#34; loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;figcaption data-pre=&#34;Figure&amp;nbsp;&#34; data-post=&#34;:&amp;nbsp;&#34; class=&#34;numbered&#34;&gt;
      Reconstructed slope before and after the event
    &lt;/figcaption&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;summary&#34;&gt;&lt;strong&gt;Summary&lt;/strong&gt;&lt;/h2&gt;
&lt;h3 id=&#34;mask-application&#34;&gt;Mask application&lt;/h3&gt;
&lt;p&gt;The model is constructed using photos that capture a different angle of the artificial plane. The first step is to isolate the relevant slope information by masking the parts of the slope that are not needed for the reconstruction (e.g. the container). To do this different masks were created to mask specific parts present in different sets of photos. The pairing is as follows:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;photo 1 $\rightarrow$ &#39;&#39; Links_Initial.jpg &#39;&#39;&lt;/li&gt;
&lt;li&gt;photo 2 to 21 $\rightarrow$ &#39;&#39; Links_Regular.jpg &#39;&#39;&lt;/li&gt;
&lt;li&gt;photo 22 $\rightarrow$ &#39;&#39; Midden_Initial.jpg &#39;&#39;&lt;/li&gt;
&lt;li&gt;photo 23 to 42 $\rightarrow$ &#39;&#39; Midden_Regular.jpg &#39;&#39;&lt;/li&gt;
&lt;li&gt;photo 43 $\rightarrow$ &#39;&#39; Rechts_Initial.jpg &#39;&#39;&lt;/li&gt;
&lt;li&gt;photo 44 to 63 $\rightarrow$ &amp;lsquo;&amp;lsquo;Rechts_Regular.jpg &#39;&amp;rsquo;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;This process was accomplished by writing the &lt;strong&gt;mask.py&lt;/strong&gt; script.&lt;/p&gt;
&lt;h3 id=&#34;marker-count&#34;&gt;Marker count&lt;/h3&gt;
&lt;p&gt;For each model there is a known fixed number of total markers that need to be detected (135). The objective of this script is to count the total amount of markers detected in the model and print if there are less than 135. This check is done to see if the automatic markers present for each markers are somehow cropped or masked out.&lt;/p&gt;
&lt;p&gt;The check process was automated using the &lt;strong&gt;check_markers.py&lt;/strong&gt; script&lt;/p&gt;
&lt;h3 id=&#34;cut-and-rotate-the-model-point-cloud&#34;&gt;Cut and rotate the model point cloud&lt;/h3&gt;
&lt;p&gt;To apply correctly the difference between the two models they both need to have the same size, position and rotation. To do this it was decided to rotate first the psarse cloud model and then resize the bounding box to a determined size. To do this the following process was defined:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Define the region size&lt;/li&gt;
&lt;li&gt;Find the minimum and maximum (for both x and y) points inside the bounding box and calculate the center (as the midpoint of points at opposite corners).&lt;/li&gt;
&lt;li&gt;Translate the points on the same height of the center point&lt;/li&gt;
&lt;li&gt;Set these points as tranform reference&lt;/li&gt;
&lt;li&gt;Update transform (and so rotate the points)&lt;/li&gt;
&lt;li&gt;Resize the bounding box&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;To accurately rotate the model the plane needs to fit in the bounding box as tightly as possibile and so the z value need to be low. Too low z values can crop too much of the plane (since the plane has a certain inclination angle) and so the rotation won&amp;rsquo;t be as precise.&lt;/p&gt;
&lt;p&gt;This process is archived by using the &lt;strong&gt;region_size.py&lt;/strong&gt; script.&lt;/p&gt;
&lt;h3 id=&#34;mesh-difference&#34;&gt;Mesh difference&lt;/h3&gt;
&lt;p&gt;Instead of caluclating the difference of the two meshes a quicker is to convert the meshes in Digital Elevation Models and then apply a per pixel difference.&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;final-workflow&#34;&gt;&lt;strong&gt;Final workflow&lt;/strong&gt;&lt;/h2&gt;
&lt;p&gt;We can summarize the developed metashape workflow as follows:&lt;/p&gt;
&lt;center&gt;













&lt;figure  &gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img src=&#34;https://gabri.xyz/media/auto_slope_img/auto_slope_processing.png&#34; alt=&#34;&#34; loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;/figure&gt;&lt;/center&gt;
&lt;p&gt;This workflow is resonably fast and has the possibility to batch the processes to further automate the workflow.&lt;/p&gt;
&lt;center&gt;













&lt;figure  &gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img src=&#34;https://gabri.xyz/media/auto_slope_img/dem_a.png&#34; alt=&#34;&#34; loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;/figure&gt;&lt;/center&gt;
&lt;center&gt;













&lt;figure  id=&#34;figure-reconstructed-dem-of-the-slope-before-and-after-the-event&#34;&gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img src=&#34;https://gabri.xyz/media/auto_slope_img/dem_b.png&#34; alt=&#34;Reconstructed DEM of the slope before and after the event&#34; loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;figcaption data-pre=&#34;Figure&amp;nbsp;&#34; data-post=&#34;:&amp;nbsp;&#34; class=&#34;numbered&#34;&gt;
      Reconstructed DEM of the slope before and after the event
    &lt;/figcaption&gt;&lt;/figure&gt;&lt;/center&gt;
&lt;center&gt;













&lt;figure  id=&#34;figure-dem-difference&#34;&gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img src=&#34;https://gabri.xyz/media/auto_slope_img/diff2.png&#34; alt=&#34;DEM difference&#34; loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;figcaption data-pre=&#34;Figure&amp;nbsp;&#34; data-post=&#34;:&amp;nbsp;&#34; class=&#34;numbered&#34;&gt;
      DEM difference
    &lt;/figcaption&gt;&lt;/figure&gt;&lt;/center&gt;
</description>
    </item>
    
    <item>
      <title>3D paleontological objects</title>
      <link>https://gabri.xyz/projects/fossils/</link>
      <pubDate>Thu, 23 Apr 2020 00:00:00 +0000</pubDate>
      <guid>https://gabri.xyz/projects/fossils/</guid>
      <description>&lt;h1 id=&#34;the-premise&#34;&gt;The premise&lt;/h1&gt;
&lt;p&gt;The computing power of modern technologies and their rapid development gave the possibility to reconstruct 3D digital objects precisely and rapidly from the real world, increasing the possibility of their conservation and sharing. There are three different types of reconstruction techniques: photogrammetry, 3D scan and CT scan or tomography. These three methods are based on the fundamental concept of obtaining, interpreting, and measuring surface and objects properties without needing a direct contact with the object.
This project gives a more in-depth look of photogrammetry, in particular the modern technique defined as Structure from Motion, applied to centimetric macroinvertebrate fossils. Photogrammetry is the most accessible and cost-effective method of the three. The project was entirely developed during the COVID-19 sanitary emergency using already available or easily obtainable equipment. As a second aim and long-term objective, the thesis works as a guide for further experimentation and automation of the process of data capture and processing and to create a digital palaeontological archive that can be used for online accurate analysis of specimens.&lt;/p&gt;
&lt;h1 id=&#34;procedures&#34;&gt;Procedures&lt;/h1&gt;
&lt;p&gt;In photogrammetry the digital reconstruction of an object is given by specialized software that can approximate the position of the photos relative to the object and its structure by capturing photos of different perspectives of the object. Since image capturing can be done with a passive sensor, photogrammetry is the most popular and diffused method of reconstruction. Furthermore, it can produce a textured model, process not always possible in 3D and CT scans. The software used in this project is Agisoft Metashape Professional because it has many tools, and it is efficiently optimized.
Two main steps compose the reconstruction process:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Image capture&lt;/li&gt;
&lt;li&gt;Computer processing.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;The first step consists in a preliminary phase in which lights, camera and the specimen are positioned and the distance between the camera and the specimen is measured. Then, only when the user is certain that the specimen is in a stable fixed position the capturing process starts. The simplest capturing procedure consists in fixing the position of the camera and rotate the specimen on one axis. The angle of rotation needs to be small enough to have an 80% overlap between images. Lighting of the specimen needs to be diffused and multidirectional to avoid sharp shadows. The background needs to be featureless to avoid reconstruction errors.&lt;/p&gt;
&lt;p&gt;The second step consists in importing the images into the software, process them and construct the final model. The processing in the software is divided in five main phases:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Image masking&lt;/li&gt;
&lt;li&gt;Image alignment&lt;/li&gt;
&lt;li&gt;Formation of a dense cloud&lt;/li&gt;
&lt;li&gt;Meshing&lt;/li&gt;
&lt;li&gt;Texturing.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;When the model is complete, it can be scaled to the real-world equivalent. In this way the measures taken on the model correspond to the real-world equivalent. For the processes that cannot be done inside the Agisoft Metashape software we proposed python codes precisely written for automatically completing some tasks (e.g. conversion of raw image files in jpg).&lt;/p&gt;
&lt;p&gt;For the process of image capture, a Nikon D3100 reflex camera was used, in order to better control the focus, ISO and focal ratio parameters and used macro rings, in particular the 12+20mm combination, to capture the most minute details of the specimen.
In order to avoid sharp shadows and give a homogeneous lighting to the specimens, we used two table lamps with diffused light. The background was black to increment the contrast with the specimen and help to differentiate the background from the object. To maintain the specimens in a fixed position crocodile-clips were used for a constant and strong grip. Each model was composed by 200 photos and took from 2 to 3 hours to complete.
The model reconstruction process was applied to six specimens. Five of them were extracted from recent and Pleistocenic sediments in Solanto (Palermo, Italy), the former belonging to the Sintema di Marsala, precisely to the lithofacies of Calcareniti di Palermo. The sixth one was collected from recent sediments in California (USA). The classification was done by observing the macroscopic characteristics of the specimens and was aided by different texts.&lt;/p&gt;
&lt;h1 id=&#34;results&#34;&gt;Results&lt;/h1&gt;
&lt;h2 id=&#34;spondylus-gaederopus-linnaeus-1758&#34;&gt;Spondylus gaederopus Linnaeus 1758&lt;/h2&gt;
&lt;div class=&#34;sketchfab-embed-wrapper&#34;&gt; &lt;iframe title=&#34;Spondylus gaedropus Linnaeus, 1758&#34; frameborder=&#34;0&#34; allowfullscreen mozallowfullscreen=&#34;true&#34; webkitallowfullscreen=&#34;true&#34; allow=&#34;autoplay; fullscreen; xr-spatial-tracking&#34; xr-spatial-tracking execution-while-out-of-viewport execution-while-not-rendered web-share width=&#34;640&#34; height=&#34;480&#34; src=&#34;https://sketchfab.com/models/584903c4d4784c8babc3f3ecd5ef3e87/embed?ui_theme=dark&#34;&gt; &lt;/iframe&gt; &lt;/div&gt;
&lt;h2 id=&#34;venus-verrucosa-linnaeus-1758&#34;&gt;Venus verrucosa Linnaeus 1758&lt;/h2&gt;
&lt;div class=&#34;sketchfab-embed-wrapper&#34;&gt; &lt;iframe title=&#34;Venus verrucosa Linnaeus, 1758&#34; frameborder=&#34;0&#34; allowfullscreen mozallowfullscreen=&#34;true&#34; webkitallowfullscreen=&#34;true&#34; allow=&#34;autoplay; fullscreen; xr-spatial-tracking&#34; xr-spatial-tracking execution-while-out-of-viewport execution-while-not-rendered web-share width=&#34;640&#34; height=&#34;480&#34; src=&#34;https://sketchfab.com/models/e89ba09d34524d58ae30e41cfa89934c/embed?ui_theme=dark&#34;&gt; &lt;/iframe&gt; &lt;/div&gt;
&lt;h2 id=&#34;pseudochama-gryphina-lamarck-1819&#34;&gt;Pseudochama gryphina (Lamarck, 1819)&lt;/h2&gt;
&lt;div class=&#34;sketchfab-embed-wrapper&#34;&gt; &lt;iframe title=&#34;Pseudochama gryphina (Lamarck, 1819)&#34; frameborder=&#34;0&#34; allowfullscreen mozallowfullscreen=&#34;true&#34; webkitallowfullscreen=&#34;true&#34; allow=&#34;autoplay; fullscreen; xr-spatial-tracking&#34; xr-spatial-tracking execution-while-out-of-viewport execution-while-not-rendered web-share width=&#34;640&#34; height=&#34;480&#34; src=&#34;https://sketchfab.com/models/504d073d93f24aa1ab1ce0ae6f0b0f9c/embed?ui_theme=dark&#34;&gt; &lt;/iframe&gt; &lt;/div&gt;
&lt;h2 id=&#34;haliotis-tuberculata-linnaeus-1758&#34;&gt;Haliotis tuberculata Linnaeus 1758&lt;/h2&gt;
&lt;div class=&#34;sketchfab-embed-wrapper&#34;&gt; &lt;iframe title=&#34;Haliotis tubercolata Linnaeus, 1758&#34; frameborder=&#34;0&#34; allowfullscreen mozallowfullscreen=&#34;true&#34; webkitallowfullscreen=&#34;true&#34; allow=&#34;autoplay; fullscreen; xr-spatial-tracking&#34; xr-spatial-tracking execution-while-out-of-viewport execution-while-not-rendered web-share width=&#34;640&#34; height=&#34;480&#34; src=&#34;https://sketchfab.com/models/aeda69fe209346c9abb06bdd3678996c/embed?ui_theme=dark&#34;&gt; &lt;/iframe&gt; &lt;/div&gt;
&lt;h2 id=&#34;dendraster-excentricus-eschscholtz-1831&#34;&gt;Dendraster excentricus (Eschscholtz, 1831)&lt;/h2&gt;
&lt;div class=&#34;sketchfab-embed-wrapper&#34;&gt; &lt;iframe title=&#34;Dendraster excentricus (Eschscholtz, 1831)&#34; frameborder=&#34;0&#34; allowfullscreen mozallowfullscreen=&#34;true&#34; webkitallowfullscreen=&#34;true&#34; allow=&#34;autoplay; fullscreen; xr-spatial-tracking&#34; xr-spatial-tracking execution-while-out-of-viewport execution-while-not-rendered web-share width=&#34;640&#34; height=&#34;480&#34; src=&#34;https://sketchfab.com/models/8fc81dcc71a14aadb96a9b47e99a6850/embed?ui_theme=dark&#34;&gt; &lt;/iframe&gt; &lt;/div&gt;
&lt;h1 id=&#34;conclusions&#34;&gt;Conclusions&lt;/h1&gt;
&lt;p&gt;In general, photogrammetric programs have their limitations and cannot reconstruct smooth, reflective, and transparent surfaces. There were in fact some difficulties in reconstructing some characteristics of the studied specimens. The pallial line for example is not present in the models because it is hardly detectable also in the photos. The internal parts for some specimens also were not completely reconstructed because they were smooth and reflective. On the other hand, problems linked to the geometry of a particular specimen were easily resolved by modifying the alignment options.
In the end, the results obtained from the application of photogrammetry on these six fossils demonstrate that this is a valid and accessible technique that can give accurate models. I hope in the future that this method of obtaining precise models very quickly can overcome the difficulties encountered and that it can be adopted as a standard to create an always-accessible repository where models can be shared and possibly 3D printed.&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>
